name: Persistent RDP (Existing User)

on:
  workflow_dispatch:

jobs:
  connect-rdp:
    runs-on: windows-latest

    steps:
      - name: Configure RDP Settings
        run: |
          # Enable RDP and allow connections
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          # Firewall rule for RDP (port 3389)
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Configure Existing Windows Account
        run: |
          $username = "User"  # Replace with your Windows account username
          $password = ConvertTo-SecureString ${{ secrets.RDP_PASSWORD }} -AsPlainText -Force

          # Assign password to the existing user
          Set-LocalUser -Name $username -Password $password

          # Ensure the user has RDP and admin permissions
          Add-LocalGroupMember -Group "Administrators" -Member $username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username

          # Export credentials for Action use
          echo "RDP_CREDS=User: $username | Password: ${{ secrets.RDP_PASSWORD }}" >> $env:GITHUB_ENV

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}
          tags: "tag:ci"
          version: latest

      - name: Show Tailscale Connection Info
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" status
          $tsIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4)
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          Write-Host "Tailscale connected at IP: $tsIP"

      - name: Verify RDP Connectivity
        run: |
          $result = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $result.TcpTestSucceeded) {
            Write-Error "RDP connection check failed!"
            exit 1
          } else {
            Write-Host "RDP port 3389 reachable via Tailscale!"
          }

      - name: Persistent Connection Monitor
        run: |
          while ($true) {
            $status = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
            if ($status.TcpTestSucceeded) {
              Write-Host "[$(Get-Date)] RDP OK"
            } else {
              Write-Host "[$(Get-Date)] RDP lost - restarting Tailscale..."
              Restart-Service -Name Tailscale
            }
            Start-Sleep -Seconds 120
          }
